<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CCGEkFjl/wEgYE3BU11eCQAAAABJRU5ErkJggg==
</value>
  </data>
</root>